@Tutorial(time: 5) {
    @Intro(title: "AVPlayerViewController Integration") {
        Learn how to easily integrate `SwiftAssRenderer` with AVKit's `AVPlayerViewController`.
    }

    @Section(title: "AVPlayerViewController") {
        @ContentAndMedia {
            In this section we will create a basic video player using `AVPlayerViewController`, and we will add the subtitles as an overlay on top of the player. We will also learn how we can periodically update the subtitles by attaching the `AVPlayer` to subtitles view.

            @Image(source: "logo-rounded.png", alt: "Logo image")
        }

        @Steps {
            @Step {
                Let's start by creating a new view controller called `VideoPlayerViewController` and inherit it from `AVPlayerViewController`. We also need to import `UIKit`, `AVKit`, `AVFoundation` and `SwiftAssRenderer`.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-1.swift")
            }

            @Step {
                Now let's create our renderer. We need to at least specify the URL path where the fonts are located that will be used to render the subtitles.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-2.swift")
            }

            @Step {
                Next, we need to create an `AssSubtitlesView` instance using the previous renderer.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-3.swift")
            }

            @Step {
                We will need to instantiate and assign the `AVPlayer` to `self`, this has to be done before we're adding the subtitles view to `AVPlayerViewController`, because the subtitles view uses the `player` for observing the current time offset.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-4.swift")
            }

            @Step {
                In order to add the subtitles view on top of the player, we need an additional method called from `viewDidLoad()`, so let's create it.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-5.swift")
            }

            @Step {
                `SwiftAssRenderer` provides a helper method to attach the subtitles view to `AVPlayerViewController`, automatically resize itself based on player's `videoBounds`, and observe the player's current time to update the renderer subtitles.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-6.swift")
            }

            @Step {
                Let's create another method that will load the subtitles contents and call it from `viewDidLoad()` as well.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-7.swift")
            }

            @Step {
                Next, let's load the subtitles contents, either from local disk for web.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-8.swift")
            }

            @Step {
                After contents have been loaded, we need to provide the contents for the renderer by calling `loadTrack(contents:)`.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-9.swift")
            }

            @Step {
                In order for the playback to automatically start when view loads, let's call `play()` in `viewDidLoad()`.

                @Code(name: "VideoPlayer.swift", file: "avplayerviewcontroller-10.swift")
            }

            @Step {
                Finally, let's run the app. And as expected, we can see the video playing and the subtitles being updated.

                @Image(source: "avplayerviewcontroller.gif", alt: "Green video rectangle with a text  at the bottom that says \"Wow!\"")
            }
        }
    }
}
